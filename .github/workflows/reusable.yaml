name: reusable
on:
  workflow_call:
    inputs:
      ref:
        type: string
      env:
        type: string
        default: ""
        required: false
jobs:
  x:
    runs-on: ubuntu-latest
    steps:
      - if: inputs.env
        name: Set environment variables
        run: >
          echo "$env"
          | yq -o json .
          | jq -r '
              to_entries
            | map("\(.key)<<__EOF__\n\(.value)\n__EOF__")
            | join("\n")
          '
          | tee -a "$GITHUB_ENV"
        env:
          env: ${{ inputs.env }}

      - id: generate-job-uuid
        run: |
          echo "::set-output name=uuid::$(python3 -c 'from uuid import uuid4; print(uuid4())')"

      - name: "${{ steps.generate-job-uuid.outputs.uuid }}"
        run: |
          echo "Job UUID: ${{ steps.generate-job-uuid.outputs.uuid }}"

      - id: get-job-id
        run: |
          job_id=$(mktemp)
          attempt=0

          while [[ "$attempt" -le 10 ]]; do
            curl -fsSL https://api.github.com/repos/"$GITHUB_REPOSITORY"/actions/runs/"$GITHUB_RUN_ID"/jobs \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              | jq -r '.jobs | map(select(.steps | map(select(.name == "${{ steps.generate-job-uuid.outputs.uuid }}")) | length != 0)) | .[0].id | values' \
              > "$job_id"

            # We got a job id, so we're done.
            [[ -s "$job_id" ]] && break

            # Retry in 1s
            : $((attempt++))
            sleep 1
          done

          if [[ ! -s "$job_id" ]]; then
            echo "Failed to find job id" >&2
            exit 1
          fi

          echo "GITHUB_JOB_ID=$(< "$job_id")" | tee -a "$GITHUB_ENV"

      # 2023-05-31T21:37:17.6758055Z Requested labels: ubuntu-latest
      # 2023-05-31T21:37:17.6758345Z Job defined at: tsibley/github-actions-testing/.github/workflows/reusable.yaml@refs/heads/master
      # 2023-05-31T21:37:17.6758550Z Reusable workflow chain:
      # 2023-05-31T21:37:17.6758671Z tsibley/github-actions-testing-2/.github/workflows/caller.yaml@refs/heads/main (feb99eaf37b38677964f6938e4dabbf01f80ff50)
      # 2023-05-31T21:37:17.6758812Z -> tsibley/github-actions-testing/.github/workflows/reusable.yaml@refs/heads/master (2a687044ec2536380629dda2b57212199bd66539)
      # â€¦
      # 2023-05-31T21:37:24.8437909Z Uses: tsibley/github-actions-testing/.github/workflows/reusable.yaml@refs/heads/master (2a687044ec2536380629dda2b57212199bd66539)
      - id: get-job-logs
        run: |
          curl -fsSL https://api.github.com/repos/"$GITHUB_REPOSITORY"/actions/jobs/"$GITHUB_JOB_ID"/logs \
              -H "Authorization: Bearer $GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: pwd
      - run: ls -lR .
      - run: ls -lR /home/runner/work
      - run: env
      - run: ps aux
      - run: echo "$0"; cat "$0"
      - run: echo "${{ github.step_summary }}"; cat "${{ github.step_summary }}"
      - run: cat "$file"
        env:
          file: "/home/runner/work/_PipelineMapping/${{ github.repository }}/PipelineFolder.json"
      - run: echo "github=$json"
        env:
          json: |
            ${{ toJSON(github) }}
      - run: echo "env=$json"
        env:
          json: |
            ${{ toJSON(env) }}
      - run: echo "job=$json"
        env:
          json: |
            ${{ toJSON(job) }}
      - run: echo "inputs=$json"
        env:
          json: |
            ${{ toJSON(inputs) }}
